#!/bin/sh /etc/rc.common
# Copyright (c) 2014 OpenWrt.org

START=80

USE_PROCD=1
PROG=/usr/sbin/umdns

. /lib/functions.sh

load_ifaces() {
	local network="$(uci get umdns.@umdns[-1].network)"
	for n in $network; do
		local device
		json_load "$(ifstatus $n)"
		json_get_var device l3_device
		echo -n "$device "
	done
}

add_ifaces() {
	json_init
	json_add_array interfaces
	for i in $(load_ifaces); do
		json_add_string "" "$i"
	done
	json_close_array

	ubus call umdns set_config "$(json_dump)"
}

create_conf_file() {
	local full_name
	local http_port
	local dev_mac

	mkdir -p /etc/umdns

	dev_mac=$(cat /sys/class/net/eth0/address)

	config_load acn
	config_get full_name settings name

	config_load uhttpd
	config_get http_ports main listen_http
	#http_port=$(echo $http_ports|awk '{print $1}'|awk -F ':' '{print $2}')

	cat > /etc/umdns/http.json <<-EOF
	{
	"http_$http_ports": { "instance": "$full_name ($dev_mac)", "service": "_http._tcp.local", "port": $http_ports }
	}
	EOF

}

reload_service() {
	stop
	start
}

start_service() {
	local enabled="$(uci get umdns.@umdns[-1].enabled)"
	[ -z "$enabled" -o "$enabled" = "0" ] && return 0

	create_conf_file

	local network="$(uci get umdns.@umdns[-1].network)"

	procd_open_instance
	procd_set_param command "$PROG"
	[ -f /etc/seccomp/umdns.json ] && procd_set_param seccomp /etc/seccomp/umdns.json
	procd_set_param respawn
	procd_open_trigger
	for n in $network; do
		procd_add_interface_trigger "interface.*" $n /etc/init.d/umdns reload
	done
	procd_close_trigger
	[ "$(uci get umdns.@umdns[-1].jail)" = 1 ] && procd_add_jail umdns ubus log
	procd_close_instance
}

service_started() {
	ubus -t 10 wait_for umdns
	[ $? = 0 ] && add_ifaces
}

service_triggers() {
	procd_add_reload_trigger "uhttpd" "acn" "umdns"
}
