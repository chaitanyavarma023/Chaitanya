#!/bin/sh /etc/rc.common

START=98
STOP=40

USE_PROCD=1

. /lib/functions.sh
. /lib/functions/network.sh
. /lib/functions/system.sh

PROG=/sbin/cipfwd

start_service()
{
	# $1: udp port
	# $2: roaming_flag    1:enable 0:disable
	# $3: device_name ex: Cip-Ap1
	# $4: Mac Address mac address of lan
	# $5: force dhcp  1:enable 0:disable
	# $6: arp inspection  1:enable 0:disable
	# $7: Debug flag  1:debug 2:dump packet others: disable

	enhancement_flag=$(uci get firewall.@dai[0].trustlistbroadcast_enable)
	fdhcp_flag=$(uci get firewall.@dai[0].forcedhcp_enable)
	arpinspection_flag="$(uci get firewall.@dai[0].arpinspection_enable)"
	lanmac=""
	dev_name="$(uci get system.@system[0].hostname)"

	case "$(board_name)" in
		edgecore,eap101|\
		edgecore,eap102|\
		edgecore,oap103)
			lanmac=$(mtd_get_mac_binary "0:Product_Info" 6)
			;;
		edgecore,eap104)
			lanmac=$(mtd_get_mac_binary "0:ART" 6)
			;;
	esac

	procd_open_instance
	procd_set_param command $PROG
	procd_append_param command '12346' "$enhancement_flag" "$dev_name" "$lanmac" "$fdhcp_flag" "$arpinspection_flag"
	procd_set_param respawn 3600 1 0
	procd_set_param stdout 1
	procd_set_param stderr 1
	procd_close_instance
}

reload_service() {
	stop
	start
}

stop_service() {
	killall -TERM cipfwd
}

service_triggers() {
	#break race condition between firewall.dai and cipfwd.init
	#do cipfwd stop and start in firewall.dai
	# procd_add_reload_trigger "firewall"
	procd_add_interface_trigger "interface.*.up" lan /etc/init.d/cipfwd restart
}
